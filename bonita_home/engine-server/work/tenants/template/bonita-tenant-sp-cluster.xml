<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="sessionProvider"
		  class="com.bonitasoft.engine.session.impl.SessionProviderClustered">
		<constructor-arg name="hazelcastInstance" ref="hazelcastInstance" />
	</bean>

	<bean id="localCacheService" class="org.bonitasoft.engine.cache.ehcache.EhCacheCacheService">
		<constructor-arg name="logger" ref="tenantTechnicalLoggerService" />
		<constructor-arg name="cacheConfigurations" ref="cacheConfigurations" />
        <constructor-arg name="defaultCacheConfiguration" ref="defaultTenantCacheConfiguration" />
        <constructor-arg name="diskStorePath" value="java.io.tmpdir/tenant.cache" />
		<constructor-arg name="tenantId" value="${tenantId}" />
    </bean>

	<bean id="cacheConfigurations" parent="communityCacheConfigurations" class="org.springframework.beans.factory.config.ListFactoryBean">
		<property name="sourceList">
			<list merge="true">
				<ref bean="sessionCache" />
			</list>
		</property>
	</bean>

	<bean id="sessionCache" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<!-- do not put the first letter because it will need to match the pattern *ESSION... -->
		<property name="name" value="ESSION_MAP" />
		<property name="maxElementsInMemory" value="${bonita.tenant.cache.session.maxElementsInMemory}" />
		<property name="inMemoryOnly" value="${bonita.tenant.cache.session.inMemoryOnly}" />
		<property name="eternal" value="${bonita.tenant.cache.session.eternal}" />
		<property name="evictionPolicy" value="${bonita.tenant.cache.session.evictionPolicy}" />
		<property name="timeToLiveSeconds" value="${bonita.tenant.cache.session.timeToLiveSeconds}" />
		<property name="maxElementsOnDisk" value="${bonita.tenant.cache.session.maxElementsOnDisk}" />
		<property name="copyOnRead" value="${bonita.tenant.cache.session.copyOnRead}" />
		<property name="copyOnWrite" value="${bonita.tenant.cache.session.copyOnWrite}" />
		<property name="readIntensive" value="${bonita.tenant.cache.session.readIntensive}" />
	</bean>

	<bean id="distributedCacheService" class="com.bonitasoft.engine.cache.impl.ClusteredCacheService">
		<constructor-arg name="logger" ref="tenantTechnicalLoggerService" />
		<constructor-arg name="sessionAccessor" ref="sessionAccessor" />
		<constructor-arg name="hazelcastInstance" ref="hazelcastInstance" />
		<!-- cache configurations are located on the hazelcast instance, the cache service is just using the hazelcast instance -->
	</bean>

	<bean id="cacheService" class="com.bonitasoft.engine.cache.impl.DelegatingCacheService">
		<constructor-arg name="localCache" ref="localCacheService" />
		<constructor-arg name="distributedCache" ref="distributedCacheService" />
		<constructor-arg name="localOnlyCaches">
			<set>
				<value>GROOVY_SCRIPT_CACHE_NAME</value>
				<value>_PROCESSDEF</value>
				<value>USER_FILTER</value>
			</set>
		</constructor-arg>
	</bean>

	<bean id="tenantEventService" class="com.bonitasoft.engine.events.impl.ClusteredEventServiceImpl">
		<constructor-arg name="handlers" ref="eventHandlers"/>
		<constructor-arg name="logger" ref="tenantTechnicalLoggerService" />
		<constructor-arg name="hazelcastInstance" ref="hazelcastInstance" />
		<constructor-arg name="tenantId" value="${tenantId}" />
	</bean>

	<bean id="bonitaExecutorServiceFactory" class="com.bonitasoft.engine.work.ClusteredLocalQueueBonitaExecutorServiceFactory">
		<constructor-arg name="logger" ref="tenantTechnicalLoggerService" />
		<constructor-arg name="tenantId" value="${tenantId}" />
		<constructor-arg name="corePoolSize" value="${bonita.tenant.work.corePoolSize}" />
		<constructor-arg name="maximumPoolSize" value="${bonita.tenant.work.maximumPoolSize}" />
		<!-- small value because of the hazelcast bug on queue not interrupted -->
		<constructor-arg name="keepAliveTimeSeconds" value="${bonita.tenant.work.keepAliveTimeSeconds}" />
		<constructor-arg name="hazelcastInstance" ref="hazelcastInstance" />
	</bean>

</beans>
